---
import type { CollectionEntry } from "astro:content";
import FormattedDate from "../components/post/FormattedDate.astro";

type Props = CollectionEntry<"blog">["data"];

const { title, pubDate, updatedDate, heroImage, readingTime } = Astro.props;
---

<script>
  document.addEventListener("DOMContentLoaded", () => {
    document.addEventListener("keydown", (e) => {
      if (e.ctrlKey && e.key === "r") {
        document.dispatchEvent(new CustomEvent("toggle-reading-mode"));
      }
    });
    const readingModeButton = document.querySelector("#reading-mode");

    readingModeButton?.addEventListener("click", () => {
      document.dispatchEvent(new CustomEvent("toggle-reading-mode"));
    });
  });
</script>

<article class="post">
  <header class="hero">
    <h1 class="title">{title}</h1>
    {
      heroImage && (
        <div class="hero-image">
          <img width={1020} height={510} src={heroImage} alt="" />
          <button
            title="Enable reading mode (Ctrl + r)"
            type="button"
            class="reading-mode"
            id="reading-mode"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 24 24"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
              class="bullet"
            >
              <circle cx="12" cy="12" r="10" />
              <circle cx="12" cy="12" r="3" />
            </svg>
          </button>
        </div>
      )
    }
    <div class="info">
      <div class="reading-time">{readingTime} min read</div>
      <div class="date">
        <FormattedDate date={pubDate} />
        {
          updatedDate && (
            <span class="updated">
              - Last updated on <FormattedDate date={updatedDate} />
            </span>
          )
        }
      </div>
    </div>
  </header>
  <slot />
</article>

<style>
  .hero {
    width: 100%;

    img {
      display: block;
      width: 100%;
      border-radius: 12px;
      box-shadow: var(--box-shadow);
    }

    .hero-image {
      position: relative;
    }

    .reading-mode {
      border-radius: 12px 0 12px 0;
      padding: 8px;
      cursor: pointer;
      background: var(--focus);
      border: 1px solid var(--primary);
      position: absolute;
      right: 0;
      bottom: 0;
      opacity: 0.8;
      .bullet {
        width: 24px;
        height: 24px;
        fill: none;
        stroke: var(--primary);
      }
    }
  }

  .title {
    margin: 12px 0;
    text-align: center;
    font-size: 32px;

    @media (min-width: 769px) {
      font-size: 46px;
    }
  }

  .info {
    font-size: 12px;
    margin-bottom: 0;
    padding: 8px 0;
    display: flex;
    justify-content: space-between;
  }
  .updated {
    font-style: italic;
  }
</style>
